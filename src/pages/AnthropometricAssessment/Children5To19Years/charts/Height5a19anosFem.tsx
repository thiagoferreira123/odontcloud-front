import React, { useEffect, useMemo, useRef } from 'react';
import { Chart, ChartConfiguration, ChartTypeRegistry, registerables } from 'chart.js';
import CrosshairPlugin from 'chartjs-plugin-crosshair';

import { useSelector } from 'react-redux';
import { InterfaceState, ThemeValues } from '../../../../types/Interface';
import { useParametersStore } from '../Parameters/hooks/ParametersStore';

const Height5a19anosFem = () => {
  const { themeValues } = useSelector<InterfaceState, { themeValues: ThemeValues }>((state) => state.settings);

  const patientAge = useParametersStore((state) => state.patientAge);
  const height = useParametersStore((state) => state.height);

  const chartContainer = useRef(null);

  const months = [
    '61',
    '62',
    '63',
    '64',
    '65',
    '66',
    '67',
    '68',
    '69',
    '70',
    '71',
    '72',
    '73',
    '74',
    '75',
    '76',
    '77',
    '78',
    '79',
    '80',
    '81',
    '82',
    '83',
    '84',
    '85',
    '86',
    '87',
    '88',
    '89',
    '90',
    '91',
    '92',
    '93',
    '94',
    '95',
    '96',
    '97',
    '98',
    '99',
    '100',
    '101',
    '102',
    '103',
    '104',
    '105',
    '106',
    '107',
    '108',
    '109',
    '110',
    '111',
    '112',
    '113',
    '114',
    '115',
    '116',
    '117',
    '118',
    '119',
    '120',
    '121',
    '122',
    '123',
    '124',
    '125',
    '126',
    '127',
    '128',
    '129',
    '130',
    '131',
    '132',
    '133',
    '134',
    '135',
    '136',
    '137',
    '138',
    '139',
    '140',
    '141',
    '142',
    '143',
    '144',
    '145',
    '146',
    '147',
    '148',
    '149',
    '150',
    '151',
    '152',
    '153',
    '154',
    '155',
    '156',
    '157',
    '158',
    '159',
    '160',
    '161',
    '162',
    '163',
    '164',
    '165',
    '166',
    '167',
    '168',
    '169',
    '170',
    '171',
    '172',
    '173',
    '174',
    '175',
    '176',
    '177',
    '178',
    '179',
    '180',
    '181',
    '182',
    '183',
    '184',
    '185',
    '186',
    '187',
    '188',
    '189',
    '190',
    '191',
    '192',
    '193',
    '194',
    '195',
    '196',
    '197',
    '198',
    '199',
    '200',
    '201',
    '202',
    '203',
    '204',
    '205',
    '206',
    '207',
    '208',
    '209',
    '210',
    '211',
    '212',
    '213',
    '214',
    '215',
    '216',
    '217',
    '218',
    '219',
    '220',
    '221',
    '222',
    '223',
    '224',
    '225',
    '226',
    '227',
    '228',
  ];
  const P3Data = [
    100.624, 101.087, 101.545, 101.998, 102.449, 102.894, 103.337, 103.776, 104.212, 104.643, 105.071, 105.496, 105.92, 106.342, 106.76, 107.181, 107.599,
    108.016, 108.435, 108.851, 109.27, 109.688, 110.107, 110.529, 110.949, 111.371, 111.792, 112.216, 112.643, 113.068, 113.494, 113.923, 114.354, 114.785,
    115.218, 115.652, 116.087, 116.526, 116.966, 117.407, 117.85, 118.294, 118.742, 119.191, 119.639, 120.094, 120.547, 121.002, 121.46, 121.919, 122.38,
    122.842, 123.307, 123.771, 124.239, 124.711, 125.181, 125.653, 126.128, 126.605, 127.087, 127.567, 128.051, 128.537, 129.025, 129.514, 130.008, 130.502,
    130.998, 131.495, 131.992, 132.492, 132.992, 133.491, 133.992, 134.489, 134.986, 135.48, 135.971, 136.461, 136.944, 137.425, 137.899, 138.368, 138.832,
    139.285, 139.733, 140.17, 140.599, 141.019, 141.428, 141.83, 142.218, 142.596, 142.965, 143.319, 143.666, 144.001, 144.324, 144.633, 144.934, 145.223,
    145.502, 145.769, 146.023, 146.269, 146.505, 146.731, 146.947, 147.151, 147.348, 147.537, 147.713, 147.884, 148.043, 148.197, 148.341, 148.477, 148.606,
    148.731, 148.847, 148.956, 149.056, 149.154, 149.246, 149.334, 149.413, 149.491, 149.561, 149.627, 149.693, 149.751, 149.807, 149.86, 149.91, 149.957, 150,
    150.044, 150.083, 150.124, 150.161, 150.2, 150.235, 150.269, 150.302, 150.335, 150.368, 150.4, 150.431, 150.46, 150.49, 150.518, 150.548, 150.575, 150.601,
    150.63, 150.655, 150.679, 150.702, 150.725, 150.743, 150.763, 150.783, 150.798, 150.815, 150.828, 150.842, 150.853,
  ];
  const P15Data = [
    104.655, 105.145, 105.63, 106.111, 106.589, 107.061, 107.53, 107.995, 108.457, 108.914, 109.368, 109.818, 110.267, 110.714, 111.158, 111.603, 112.046,
    112.488, 112.931, 113.372, 113.814, 114.257, 114.7, 115.145, 115.589, 116.035, 116.48, 116.927, 117.376, 117.825, 118.275, 118.727, 119.18, 119.635, 120.09,
    120.547, 121.005, 121.466, 121.928, 122.392, 122.857, 123.324, 123.793, 124.264, 124.735, 125.21, 125.685, 126.161, 126.64, 127.12, 127.602, 128.085,
    128.57, 129.055, 129.543, 130.033, 130.524, 131.016, 131.51, 132.007, 132.506, 133.005, 133.507, 134.012, 134.517, 135.025, 135.535, 136.047, 136.56,
    137.074, 137.588, 138.104, 138.62, 139.135, 139.65, 140.162, 140.673, 141.182, 141.687, 142.189, 142.685, 143.177, 143.664, 144.143, 144.617, 145.081,
    145.538, 145.984, 146.421, 146.849, 147.265, 147.672, 148.066, 148.449, 148.821, 149.18, 149.529, 149.866, 150.191, 150.503, 150.804, 151.094, 151.372,
    151.638, 151.892, 152.136, 152.37, 152.593, 152.806, 153.008, 153.201, 153.385, 153.558, 153.724, 153.879, 154.028, 154.167, 154.298, 154.421, 154.54,
    154.649, 154.752, 154.848, 154.939, 155.024, 155.104, 155.178, 155.248, 155.312, 155.372, 155.43, 155.482, 155.53, 155.576, 155.619, 155.66, 155.696,
    155.733, 155.766, 155.8, 155.831, 155.862, 155.891, 155.919, 155.946, 155.973, 155.999, 156.025, 156.05, 156.074, 156.098, 156.121, 156.145, 156.166,
    156.188, 156.21, 156.23, 156.249, 156.267, 156.285, 156.299, 156.314, 156.328, 156.339, 156.351, 156.36, 156.369, 156.376,
  ];
  const P50Data = [
    109.602, 110.126, 110.645, 111.16, 111.67, 112.175, 112.677, 113.174, 113.667, 114.156, 114.642, 115.124, 115.604, 116.081, 116.557, 117.031, 117.504,
    117.977, 118.449, 118.921, 119.393, 119.865, 120.337, 120.81, 121.284, 121.759, 122.234, 122.71, 123.187, 123.665, 124.144, 124.623, 125.104, 125.587,
    126.071, 126.556, 127.042, 127.53, 128.02, 128.511, 129.004, 129.498, 129.993, 130.49, 130.989, 131.49, 131.991, 132.494, 132.999, 133.505, 134.012, 134.52,
    135.03, 135.541, 136.053, 136.567, 137.082, 137.599, 138.117, 138.636, 139.158, 139.68, 140.205, 140.731, 141.259, 141.789, 142.321, 142.853, 143.387,
    143.922, 144.458, 144.993, 145.528, 146.062, 146.595, 147.126, 147.655, 148.18, 148.702, 149.22, 149.732, 150.239, 150.739, 151.233, 151.718, 152.195,
    152.663, 153.121, 153.568, 154.004, 154.429, 154.842, 155.244, 155.633, 156.01, 156.375, 156.727, 157.067, 157.394, 157.708, 158.01, 158.3, 158.577,
    158.842, 159.096, 159.338, 159.569, 159.789, 159.998, 160.197, 160.386, 160.564, 160.733, 160.893, 161.043, 161.184, 161.318, 161.442, 161.56, 161.669,
    161.772, 161.867, 161.956, 162.039, 162.116, 162.188, 162.254, 162.315, 162.372, 162.424, 162.472, 162.516, 162.556, 162.593, 162.628, 162.659, 162.689,
    162.716, 162.742, 162.767, 162.79, 162.813, 162.834, 162.854, 162.874, 162.894, 162.912, 162.93, 162.948, 162.965, 162.982, 162.998, 163.014, 163.03,
    163.045, 163.06, 163.073, 163.086, 163.098, 163.109, 163.119, 163.128, 163.136, 163.142, 163.147, 163.151, 163.153, 163.155,
  ];
  const P85Data = [
    114.549, 115.107, 115.66, 116.208, 116.751, 117.29, 117.823, 118.353, 118.878, 119.399, 119.916, 120.431, 120.94, 121.448, 121.956, 122.459, 122.963,
    123.466, 123.967, 124.47, 124.971, 125.473, 125.975, 126.476, 126.98, 127.483, 127.988, 128.493, 128.997, 129.504, 130.012, 130.52, 131.029, 131.539,
    132.051, 132.565, 133.08, 133.595, 134.111, 134.63, 135.15, 135.671, 136.193, 136.717, 137.244, 137.769, 138.298, 138.828, 139.358, 139.889, 140.422,
    140.956, 141.49, 142.027, 142.564, 143.101, 143.64, 144.182, 144.723, 145.266, 145.809, 146.356, 146.902, 147.451, 148.001, 148.554, 149.106, 149.66,
    150.215, 150.77, 151.327, 151.882, 152.436, 152.99, 153.54, 154.09, 154.636, 155.179, 155.718, 156.25, 156.779, 157.301, 157.815, 158.322, 158.819, 159.309,
    159.788, 160.257, 160.714, 161.16, 161.593, 162.013, 162.421, 162.817, 163.199, 163.569, 163.924, 164.267, 164.596, 164.913, 165.216, 165.506, 165.782,
    166.047, 166.3, 166.54, 166.768, 166.985, 167.19, 167.386, 167.57, 167.743, 167.908, 168.061, 168.207, 168.341, 168.469, 168.587, 168.698, 168.799, 168.894,
    168.982, 169.065, 169.14, 169.209, 169.272, 169.331, 169.383, 169.432, 169.476, 169.514, 169.55, 169.582, 169.61, 169.636, 169.659, 169.682, 169.7, 169.719,
    169.734, 169.75, 169.763, 169.777, 169.79, 169.802, 169.814, 169.825, 169.835, 169.845, 169.856, 169.865, 169.876, 169.884, 169.894, 169.903, 169.909,
    169.917, 169.923, 169.929, 169.934, 169.939, 169.941, 169.943, 169.944, 169.943, 169.942, 169.938, 169.934,
  ];
  const P97Data = [
    118.579, 119.165, 119.745, 120.321, 120.89, 121.456, 122.016, 122.572, 123.123, 123.67, 124.213, 124.753, 125.288, 125.821, 126.354, 126.881, 127.41,
    127.938, 128.463, 128.99, 129.515, 130.041, 130.568, 131.092, 131.62, 132.146, 132.676, 133.204, 133.731, 134.261, 134.793, 135.323, 135.855, 136.388,
    136.923, 137.46, 137.998, 138.535, 139.074, 139.615, 140.157, 140.701, 141.245, 141.79, 142.339, 142.885, 143.435, 143.987, 144.538, 145.09, 145.644,
    146.199, 146.753, 147.311, 147.868, 148.423, 148.983, 149.545, 150.105, 150.667, 151.228, 151.794, 152.359, 152.925, 153.494, 154.064, 154.634, 155.205,
    155.777, 156.349, 156.923, 157.494, 158.064, 158.633, 159.198, 159.764, 160.324, 160.881, 161.433, 161.978, 162.52, 163.053, 163.58, 164.098, 164.605,
    165.105, 165.592, 166.071, 166.536, 166.989, 167.43, 167.854, 168.269, 168.67, 169.056, 169.43, 169.788, 170.133, 170.463, 170.783, 171.086, 171.376,
    171.652, 171.916, 172.169, 172.407, 172.633, 172.847, 173.049, 173.243, 173.423, 173.592, 173.754, 173.902, 174.043, 174.172, 174.294, 174.408, 174.513,
    174.607, 174.697, 174.779, 174.856, 174.925, 174.987, 175.042, 175.096, 175.14, 175.183, 175.221, 175.251, 175.28, 175.305, 175.327, 175.346, 175.362,
    175.378, 175.389, 175.402, 175.41, 175.42, 175.426, 175.433, 175.44, 175.446, 175.452, 175.456, 175.46, 175.464, 175.47, 175.473, 175.479, 175.481, 175.485,
    175.489, 175.489, 175.492, 175.493, 175.494, 175.494, 175.495, 175.492, 175.488, 175.486, 175.479, 175.474, 175.465, 175.457,
  ];
  const meses = patientAge * 12;

  const data = useMemo(() => {
    return {
      labels: months,
      datasets: [
        {
          label: '97h',
          data: P97Data,
          borderColor: 'red',
        },
        {
          label: '85th',
          data: P85Data,
          borderColor: 'orange',
        },
        {
          label: '50th',
          data: P50Data,
          borderColor: 'green',
        },
        {
          label: '15th',
          data: P15Data,
          borderColor: 'orange',
        },
        {
          label: '3rd',
          data: P3Data,
          borderColor: 'red',
        },
        {
          label: 'Comprimento atual',
          data: months.map((month) => (Number(month) === meses ? Number(height) * 100 : null)),
          borderColor: 'purple', // Cor do marcador
          backgroundColor: 'purple', // Cor de fundo do marcador
          pointRadius: 8, // Tamanho do marcador
          pointHoverRadius: 12, // Tamanho ao passar o mouse
          showLine: false, // Não mostrar linha
          fill: false, // Sem preenchimento
        },
      ],
    };
  }, [P15Data, P3Data, P50Data, P85Data, P97Data, height, meses, months]);

  const config: ChartConfiguration<keyof ChartTypeRegistry, (number | null)[], string | number | boolean> = useMemo(() => {
    return {
      type: 'line',
      options: {
        layout: {
          padding: 0,
        },
        showLine: true,
        plugins: {
          // crosshair: Crosshair,
          // datalabels: false,
          // tooltip: ChartTooltipForCrosshair,
          // legend: false,
          // streaming: false,
        },
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            type: 'linear',
            grid: {
              display: true,
              lineWidth: 1,
              color: themeValues.separatorLight,
              drawBorder: false,
              drawTicks: true,
            },
            ticks: {
              padding: 8,
              stepSize: 1,
              fontColor: themeValues.alternate,
            },
            title: {
              display: true,
              text: 'Comprimento (cm)',
              color: themeValues.primary,
            },
          },
          x: {
            type: 'category',
            grid: {
              display: false,
              drawTicks: true,
              drawBorder: false,
            },
            ticks: { padding: 8, stepSize: 1, fontColor: themeValues.alternate },
            title: {
              display: true,
              text: 'Idade em meses',
              color: themeValues.primary,
            },
          },
        },
      },
      data,
    };
  }, [themeValues, data]);

  useEffect(() => {
    let myChart: Chart | null = null;

    if (chartContainer && chartContainer.current) {
      Chart.register(...registerables);

      myChart = new Chart(chartContainer.current, config);
    }
    return () => {
      if (myChart) {
        myChart.destroy();
      }
    };
  }, [config]);

  return <canvas ref={chartContainer} />;
};

export default React.memo(Height5a19anosFem);
