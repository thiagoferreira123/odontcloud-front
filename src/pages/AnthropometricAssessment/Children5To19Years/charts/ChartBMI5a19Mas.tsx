import React, { useEffect, useMemo, useRef } from 'react';
import { Chart, ChartConfiguration, ChartTypeRegistry, registerables } from 'chart.js';

import { useSelector } from 'react-redux';
import { InterfaceState, ThemeValues } from '../../../../types/Interface';
import { useParametersStore } from '../Parameters/hooks/ParametersStore';
import { isValidNumber } from '../../../../helpers/MathHelpers';
import { calculateBMI } from '../Results/helpers/GeneralEquations';

const ChartBMI5a19Mas = () => {
  const { themeValues } = useSelector<InterfaceState, { themeValues: ThemeValues }>((state) => state.settings);

  const patientAge = useParametersStore((state) => state.patientAge);
  const height = useParametersStore((state) => state.height);
  const weight = useParametersStore((state) => state.weight);

  const chartContainer = useRef(null);

  const months = ['61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107', '108', '109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128', '129', '130', '131', '132', '133', '134', '135', '136', '137', '138', '139', '140', '141', '142', '143', '144', '145', '146', '147', '148', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '159', '160', '161', '162', '163', '164', '165', '166', '167', '168', '169', '170', '171', '172', '173', '174', '175', '176', '177', '178', '179', '180', '181', '182', '183', '184', '185', '186', '187', '188', '189', '190', '191', '192', '193', '194', '195', '196', '197', '198', '199', '200', '201', '202', '203', '204', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220', '221', '222', '223', '224', '225', '226', '227', '228'];
  const P3Data = [13.148, 13.144, 13.14, 13.138, 13.137, 13.137, 13.138, 13.14, 13.143, 13.146, 13.151, 13.157, 13.163, 13.17, 13.177, 13.185, 13.193, 13.202, 13.212, 13.222, 13.232, 13.242, 13.253, 13.265, 13.276, 13.288, 13.301, 13.313, 13.326, 13.339, 13.352, 13.365, 13.379, 13.393, 13.407, 13.422, 13.436, 13.451, 13.466, 13.482, 13.497, 13.513, 13.529, 13.545, 13.562, 13.579, 13.596, 13.614, 13.632, 13.65, 13.669, 13.689, 13.708, 13.729, 13.75, 13.771, 13.794, 13.816, 13.84, 13.863, 13.888, 13.913, 13.938, 13.964, 13.99, 14.017, 14.045, 14.073, 14.102, 14.131, 14.161, 14.191, 14.222, 14.253, 14.285, 14.317, 14.35, 14.383, 14.417, 14.452, 14.487, 14.523, 14.559, 14.596, 14.634, 14.672, 14.711, 14.751, 14.791, 14.831, 14.873, 14.915, 14.957, 15, 15.044, 15.087, 15.132, 15.177, 15.222, 15.268, 15.313, 15.36, 15.406, 15.452, 15.499, 15.545, 15.592, 15.639, 15.685, 15.731, 15.778, 15.824, 15.87, 15.916, 15.961, 16.007, 16.052, 16.097, 16.142, 16.186, 16.23, 16.274, 16.318, 16.361, 16.404, 16.446, 16.488, 16.53, 16.571, 16.612, 16.652, 16.692, 16.732, 16.77, 16.809, 16.847, 16.884, 16.921, 16.958, 16.994, 17.029, 17.064, 17.098, 17.132, 17.165, 17.198, 17.231, 17.262, 17.293, 17.324, 17.354, 17.383, 17.412, 17.441, 17.469, 17.496, 17.523, 17.549, 17.575, 17.6, 17.624, 17.648, 17.671, 17.694, 17.716, 17.738, 17.759, 17.779];
  const P15Data = [14.03, 14.026, 14.023, 14.02, 14.019, 14.019, 14.02, 14.023, 14.026, 14.031, 14.036, 14.042, 14.049, 14.057, 14.065, 14.075, 14.084, 14.095, 14.105, 14.117, 14.128, 14.141, 14.153, 14.166, 14.18, 14.194, 14.208, 14.223, 14.238, 14.253, 14.268, 14.284, 14.3, 14.317, 14.333, 14.35, 14.368, 14.385, 14.403, 14.421, 14.44, 14.459, 14.478, 14.497, 14.517, 14.537, 14.558, 14.579, 14.6, 14.622, 14.645, 14.668, 14.691, 14.716, 14.741, 14.766, 14.793, 14.82, 14.847, 14.875, 14.904, 14.933, 14.963, 14.994, 15.025, 15.056, 15.089, 15.122, 15.156, 15.19, 15.225, 15.26, 15.296, 15.333, 15.37, 15.408, 15.447, 15.486, 15.525, 15.566, 15.607, 15.648, 15.691, 15.734, 15.778, 15.822, 15.867, 15.913, 15.96, 16.007, 16.055, 16.103, 16.153, 16.202, 16.253, 16.303, 16.355, 16.407, 16.459, 16.512, 16.565, 16.618, 16.672, 16.726, 16.779, 16.833, 16.887, 16.941, 16.995, 17.049, 17.103, 17.157, 17.21, 17.264, 17.317, 17.37, 17.423, 17.475, 17.528, 17.58, 17.631, 17.683, 17.734, 17.784, 17.835, 17.885, 17.935, 17.984, 18.032, 18.081, 18.129, 18.176, 18.223, 18.27, 18.316, 18.361, 18.406, 18.451, 18.495, 18.538, 18.581, 18.624, 18.666, 18.707, 18.748, 18.788, 18.828, 18.868, 18.906, 18.944, 18.982, 19.019, 19.056, 19.092, 19.128, 19.163, 19.197, 19.231, 19.264, 19.297, 19.329, 19.361, 19.392, 19.422, 19.452, 19.482, 19.511, 19.539];
  const P50Data = [15.264, 15.262, 15.26, 15.26, 15.262, 15.264, 15.268, 15.274, 15.28, 15.288, 15.296, 15.306, 15.317, 15.328, 15.341, 15.354, 15.368, 15.382, 15.398, 15.414, 15.43, 15.447, 15.465, 15.483, 15.502, 15.521, 15.541, 15.561, 15.581, 15.602, 15.624, 15.646, 15.668, 15.69, 15.713, 15.737, 15.761, 15.785, 15.809, 15.834, 15.86, 15.886, 15.912, 15.938, 15.965, 15.992, 16.02, 16.049, 16.078, 16.108, 16.138, 16.169, 16.201, 16.233, 16.266, 16.3, 16.335, 16.37, 16.406, 16.443, 16.481, 16.519, 16.558, 16.597, 16.638, 16.679, 16.72, 16.763, 16.806, 16.85, 16.894, 16.939, 16.985, 17.031, 17.078, 17.126, 17.175, 17.224, 17.273, 17.324, 17.375, 17.427, 17.48, 17.533, 17.588, 17.643, 17.698, 17.755, 17.812, 17.87, 17.929, 17.989, 18.049, 18.11, 18.171, 18.233, 18.296, 18.359, 18.422, 18.486, 18.55, 18.615, 18.68, 18.744, 18.81, 18.875, 18.94, 19.005, 19.07, 19.135, 19.2, 19.265, 19.329, 19.394, 19.458, 19.522, 19.585, 19.649, 19.712, 19.774, 19.837, 19.899, 19.96, 20.022, 20.082, 20.143, 20.203, 20.262, 20.321, 20.38, 20.438, 20.495, 20.552, 20.608, 20.664, 20.72, 20.774, 20.829, 20.882, 20.936, 20.988, 21.04, 21.091, 21.142, 21.192, 21.242, 21.291, 21.34, 21.388, 21.435, 21.482, 21.528, 21.574, 21.619, 21.664, 21.708, 21.751, 21.794, 21.836, 21.877, 21.918, 21.958, 21.998, 22.037, 22.076, 22.114, 22.151, 22.188];
  const P85Data = [16.7, 16.703, 16.708, 16.714, 16.722, 16.732, 16.743, 16.755, 16.769, 16.784, 16.801, 16.819, 16.838, 16.858, 16.879, 16.902, 16.925, 16.949, 16.974, 17, 17.026, 17.054, 17.082, 17.111, 17.14, 17.17, 17.202, 17.233, 17.265, 17.298, 17.332, 17.366, 17.4, 17.435, 17.471, 17.508, 17.544, 17.582, 17.62, 17.659, 17.698, 17.738, 17.778, 17.818, 17.86, 17.902, 17.944, 17.987, 18.031, 18.076, 18.121, 18.168, 18.215, 18.263, 18.311, 18.361, 18.412, 18.462, 18.515, 18.568, 18.621, 18.675, 18.73, 18.786, 18.843, 18.9, 18.958, 19.017, 19.077, 19.137, 19.198, 19.26, 19.322, 19.385, 19.449, 19.513, 19.578, 19.643, 19.71, 19.777, 19.844, 19.913, 19.982, 20.052, 20.122, 20.193, 20.265, 20.338, 20.411, 20.486, 20.56, 20.636, 20.711, 20.788, 20.865, 20.943, 21.021, 21.099, 21.178, 21.257, 21.336, 21.416, 21.495, 21.574, 21.654, 21.733, 21.812, 21.891, 21.97, 22.049, 22.127, 22.204, 22.282, 22.359, 22.436, 22.512, 22.587, 22.663, 22.737, 22.812, 22.885, 22.958, 23.031, 23.103, 23.174, 23.245, 23.315, 23.385, 23.453, 23.522, 23.589, 23.656, 23.722, 23.787, 23.852, 23.916, 23.979, 24.042, 24.104, 24.165, 24.226, 24.285, 24.344, 24.402, 24.46, 24.517, 24.573, 24.628, 24.683, 24.737, 24.79, 24.843, 24.895, 24.946, 24.996, 25.046, 25.094, 25.143, 25.19, 25.237, 25.282, 25.328, 25.372, 25.416, 25.459, 25.501, 25.543, 25.584];
  const P97Data = [18.052, 18.065, 18.08, 18.096, 18.114, 18.134, 18.156, 18.18, 18.205, 18.232, 18.261, 18.291, 18.323, 18.356, 18.39, 18.426, 18.463, 18.501, 18.541, 18.582, 18.623, 18.666, 18.71, 18.756, 18.801, 18.848, 18.897, 18.945, 18.996, 19.047, 19.098, 19.151, 19.205, 19.259, 19.315, 19.371, 19.428, 19.486, 19.545, 19.605, 19.666, 19.727, 19.789, 19.852, 19.916, 19.981, 20.046, 20.112, 20.18, 20.248, 20.317, 20.388, 20.459, 20.531, 20.605, 20.679, 20.754, 20.83, 20.907, 20.985, 21.063, 21.142, 21.223, 21.304, 21.385, 21.468, 21.551, 21.635, 21.72, 21.805, 21.891, 21.977, 22.064, 22.151, 22.239, 22.327, 22.416, 22.505, 22.595, 22.685, 22.775, 22.866, 22.958, 23.05, 23.142, 23.235, 23.328, 23.422, 23.516, 23.61, 23.705, 23.8, 23.895, 23.991, 24.086, 24.182, 24.278, 24.373, 24.47, 24.565, 24.66, 24.755, 24.85, 24.944, 25.037, 25.131, 25.223, 25.315, 25.406, 25.496, 25.586, 25.674, 25.762, 25.849, 25.935, 26.021, 26.105, 26.189, 26.271, 26.352, 26.433, 26.513, 26.592, 26.67, 26.747, 26.823, 26.897, 26.971, 27.044, 27.116, 27.188, 27.258, 27.326, 27.395, 27.462, 27.528, 27.593, 27.657, 27.72, 27.782, 27.844, 27.904, 27.963, 28.021, 28.079, 28.135, 28.19, 28.245, 28.299, 28.352, 28.403, 28.454, 28.504, 28.552, 28.6, 28.648, 28.693, 28.738, 28.782, 28.826, 28.868, 28.91, 28.95, 28.99, 29.028, 29.067, 29.103, 29.14];
  const meses = patientAge * 12;

  const data = useMemo(() => {
    const imc = isValidNumber(weight) && isValidNumber(height) && Number(weight) && Number(height) ? calculateBMI(Number(weight), Number(height)) : 0;

    return {
      labels: months,
      datasets: [

        {
          label: '97h',
          data: P97Data,
          borderColor: 'red',
        },
        {
          label: '85th',
          data: P85Data,
          borderColor: 'orange',
        },
        {
          label: '50th',
          data: P50Data,
          borderColor: 'green',
        },
        {
          label: '15th',
          data: P15Data,
          borderColor: 'orange',
        },
        {
          label: '3rd',
          data: P3Data,
          borderColor: 'red',
        },
        {
          label: 'IMC atual',
          data: months.map((month) => (Number(month) === meses ? imc : null)),
          borderColor: 'purple', // Cor do marcador
          backgroundColor: 'purple', // Cor de fundo do marcador
          pointRadius: 8, // Tamanho do marcador
          pointHoverRadius: 12, // Tamanho ao passar o mouse
          showLine: false, // NÃ£o mostrar linha
          fill: false, // Sem preenchimento
        },
      ],
    };
  }, [height, weight]);

  const config: ChartConfiguration<keyof ChartTypeRegistry, (number | null)[], string | number | boolean> = useMemo(() => {
    return {
      type: 'line',
      options: {
        layout: {
          padding: 0,
        },
        showLine: true,
        plugins: {},
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            type: 'linear',
            grid: {
              display: true,
              lineWidth: 1,
              color: themeValues.separatorLight,
              drawBorder: false,
              drawTicks: true,
            },
            ticks: {
              padding: 8,
              stepSize: 1,
              fontColor: themeValues.alternate,
            },
            title: {
              display: true,
              text: 'IMC (kg/m2)',
              color: themeValues.primary,
            },
          },
          x: {
            type: 'category',
            grid: {
              display: false,
              drawTicks: true,
              drawBorder: false,
            },
            ticks: { padding: 8, stepSize: 1, fontColor: themeValues.alternate },
            title: {
              display: true,
              text: 'Idade em meses',
              color: themeValues.primary,
            },
          },
        },
      },
      data,
    };
  }, [themeValues, data]);


  useEffect(() => {
    let myChart: Chart | null = null;

    if (chartContainer && chartContainer.current) {
      Chart.register(...registerables);

      myChart = new Chart(chartContainer.current, config);
    }
    return () => {
      if (myChart) {
        myChart.destroy();
      }
    };
  }, [config]);

  return <canvas ref={chartContainer} />;
};

export default React.memo(ChartBMI5a19Mas);
