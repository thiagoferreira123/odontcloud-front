import React, { useEffect, useMemo, useRef } from 'react';
import { Chart, ChartConfiguration, ChartTypeRegistry, registerables } from 'chart.js';

import { useSelector } from 'react-redux';
import { InterfaceState, ThemeValues } from '../../../../types/Interface';
import { useParametersStore } from '../Parameters/hooks/ParametersStore';

const Height5a19anosMas = () => {
  const { themeValues } = useSelector<InterfaceState, { themeValues: ThemeValues }>((state) => state.settings);

  const patientAge = useParametersStore((state) => state.patientAge);
  const height = useParametersStore((state) => state.height);

  const chartContainer = useRef(null);

  const months = ['61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107', '108', '109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127', '128', '129', '130', '131', '132', '133', '134', '135', '136', '137', '138', '139', '140', '141', '142', '143', '144', '145', '146', '147', '148', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '159', '160', '161', '162', '163', '164', '165', '166', '167', '168', '169', '170', '171', '172', '173', '174', '175', '176', '177', '178', '179', '180', '181', '182', '183', '184', '185', '186', '187', '188', '189', '190', '191', '192', '193', '194', '195', '196', '197', '198', '199', '200', '201', '202', '203', '204', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220', '221', '222', '223', '224', '225', '226', '227', '228'];
  const P3Data = [101.629, 102.106, 102.581, 103.054, 103.522, 103.985, 104.444, 104.902, 105.353, 105.801, 106.246, 106.685, 107.12, 107.555, 107.985, 108.414, 108.842, 109.268, 109.692, 110.114, 110.538, 110.958, 111.376, 111.793, 112.207, 112.62, 113.031, 113.44, 113.848, 114.254, 114.657, 115.058, 115.458, 115.854, 116.249, 116.642, 117.034, 117.423, 117.811, 118.197, 118.583, 118.965, 119.349, 119.732, 120.114, 120.496, 120.877, 121.258, 121.639, 122.019, 122.398, 122.779, 123.156, 123.533, 123.912, 124.287, 124.665, 125.039, 125.416, 125.792, 126.169, 126.546, 126.924, 127.304, 127.685, 128.071, 128.458, 128.85, 129.245, 129.644, 130.046, 130.454, 130.863, 131.279, 131.7, 132.128, 132.558, 132.996, 133.439, 133.888, 134.343, 134.807, 135.277, 135.754, 136.24, 136.731, 137.235, 137.743, 138.261, 138.786, 139.321, 139.859, 140.407, 140.956, 141.512, 142.073, 142.635, 143.198, 143.761, 144.325, 144.89, 145.447, 146.004, 146.558, 147.107, 147.649, 148.184, 148.714, 149.237, 149.747, 150.25, 150.742, 151.224, 151.695, 152.153, 152.599, 153.037, 153.463, 153.877, 154.28, 154.674, 155.057, 155.428, 155.787, 156.135, 156.472, 156.801, 157.116, 157.424, 157.721, 158.004, 158.28, 158.545, 158.799, 159.043, 159.276, 159.499, 159.712, 159.915, 160.108, 160.292, 160.466, 160.628, 160.784, 160.932, 161.068, 161.201, 161.322, 161.44, 161.549, 161.652, 161.749, 161.842, 161.93, 162.014, 162.095, 162.168, 162.242, 162.31, 162.375, 162.438, 162.502, 162.557, 162.613, 162.668, 162.721, 162.77, 162.817];
  const P15Data = [105.506, 106.01, 106.51, 107.009, 107.503, 107.992, 108.478, 108.96, 109.437, 109.91, 110.38, 110.845, 111.306, 111.765, 112.221, 112.674, 113.128, 113.579, 114.028, 114.476, 114.924, 115.37, 115.814, 116.256, 116.696, 117.134, 117.571, 118.006, 118.439, 118.87, 119.299, 119.726, 120.15, 120.573, 120.993, 121.411, 121.828, 122.243, 122.656, 123.068, 123.479, 123.888, 124.297, 124.705, 125.113, 125.521, 125.928, 126.334, 126.741, 127.146, 127.551, 127.957, 128.36, 128.763, 129.167, 129.568, 129.97, 130.371, 130.772, 131.174, 131.575, 131.978, 132.381, 132.786, 133.193, 133.604, 134.016, 134.433, 134.853, 135.277, 135.704, 136.137, 136.572, 137.013, 137.459, 137.911, 138.367, 138.829, 139.297, 139.771, 140.252, 140.74, 141.235, 141.737, 142.248, 142.764, 143.291, 143.825, 144.367, 144.917, 145.475, 146.038, 146.609, 147.183, 147.762, 148.344, 148.929, 149.514, 150.099, 150.683, 151.266, 151.844, 152.419, 152.991, 153.556, 154.115, 154.665, 155.209, 155.744, 156.268, 156.782, 157.284, 157.775, 158.254, 158.72, 159.173, 159.615, 160.045, 160.464, 160.869, 161.265, 161.648, 162.019, 162.378, 162.725, 163.06, 163.386, 163.698, 164.001, 164.293, 164.572, 164.842, 165.1, 165.348, 165.584, 165.809, 166.024, 166.228, 166.421, 166.604, 166.778, 166.941, 167.094, 167.238, 167.374, 167.5, 167.62, 167.73, 167.835, 167.932, 168.023, 168.108, 168.188, 168.264, 168.335, 168.402, 168.464, 168.525, 168.581, 168.634, 168.684, 168.734, 168.779, 168.823, 168.866, 168.906, 168.943, 168.979];
  const P50Data = [110.265, 110.801, 111.334, 111.864, 112.39, 112.911, 113.428, 113.941, 114.45, 114.955, 115.455, 115.951, 116.443, 116.932, 117.42, 117.905, 118.388, 118.87, 119.351, 119.83, 120.308, 120.785, 121.26, 121.734, 122.205, 122.675, 123.143, 123.609, 124.074, 124.536, 124.996, 125.454, 125.91, 126.364, 126.816, 127.265, 127.713, 128.159, 128.603, 129.047, 129.489, 129.93, 130.37, 130.81, 131.25, 131.688, 132.127, 132.565, 133.003, 133.44, 133.877, 134.313, 134.748, 135.183, 135.617, 136.05, 136.483, 136.915, 137.347, 137.78, 138.212, 138.645, 139.08, 139.516, 139.954, 140.395, 140.839, 141.286, 141.737, 142.192, 142.65, 143.113, 143.58, 144.051, 144.528, 145.009, 145.496, 145.989, 146.488, 146.993, 147.504, 148.022, 148.548, 149.081, 149.621, 150.169, 150.726, 151.29, 151.862, 152.442, 153.03, 153.623, 154.222, 154.826, 155.433, 156.043, 156.654, 157.266, 157.878, 158.487, 159.094, 159.696, 160.294, 160.886, 161.472, 162.05, 162.621, 163.182, 163.732, 164.272, 164.799, 165.314, 165.816, 166.305, 166.78, 167.242, 167.69, 168.126, 168.548, 168.958, 169.355, 169.739, 170.11, 170.468, 170.814, 171.147, 171.468, 171.777, 172.075, 172.361, 172.634, 172.897, 173.147, 173.386, 173.613, 173.828, 174.032, 174.225, 174.407, 174.578, 174.739, 174.89, 175.03, 175.161, 175.282, 175.395, 175.5, 175.596, 175.685, 175.767, 175.843, 175.913, 175.978, 176.038, 176.094, 176.145, 176.192, 176.237, 176.278, 176.316, 176.352, 176.385, 176.416, 176.445, 176.472, 176.498, 176.521, 176.543];
  const P85Data = [115.023, 115.592, 116.157, 116.718, 117.276, 117.83, 118.378, 118.922, 119.463, 119.999, 120.53, 121.057, 121.581, 122.1, 122.619, 123.135, 123.648, 124.161, 124.674, 125.184, 125.693, 126.201, 126.707, 127.212, 127.715, 128.216, 128.715, 129.213, 129.709, 130.202, 130.694, 131.183, 131.671, 132.155, 132.638, 133.119, 133.598, 134.075, 134.551, 135.025, 135.498, 135.972, 136.444, 136.915, 137.386, 137.856, 138.326, 138.796, 139.266, 139.735, 140.203, 140.669, 141.136, 141.603, 142.067, 142.532, 142.996, 143.46, 143.923, 144.385, 144.849, 145.313, 145.778, 146.245, 146.715, 147.186, 147.661, 148.139, 148.621, 149.106, 149.596, 150.088, 150.587, 151.089, 151.596, 152.108, 152.626, 153.149, 153.678, 154.214, 154.757, 155.305, 155.861, 156.425, 156.995, 157.575, 158.16, 158.755, 159.357, 159.968, 160.584, 161.209, 161.836, 162.469, 163.104, 163.741, 164.379, 165.018, 165.656, 166.291, 166.921, 167.548, 168.169, 168.782, 169.388, 169.986, 170.576, 171.154, 171.72, 172.275, 172.817, 173.345, 173.858, 174.356, 174.84, 175.31, 175.765, 176.206, 176.633, 177.047, 177.445, 177.83, 178.201, 178.558, 178.902, 179.234, 179.55, 179.857, 180.148, 180.428, 180.697, 180.952, 181.194, 181.424, 181.641, 181.847, 182.041, 182.223, 182.393, 182.552, 182.701, 182.838, 182.967, 183.083, 183.19, 183.29, 183.379, 183.462, 183.535, 183.602, 183.664, 183.719, 183.768, 183.812, 183.852, 183.887, 183.921, 183.949, 183.975, 183.999, 184.019, 184.036, 184.054, 184.067, 184.079, 184.089, 184.099, 184.107];
  const P97Data = [118.9, 119.495, 120.087, 120.673, 121.257, 121.837, 122.412, 122.98, 123.547, 124.109, 124.664, 125.217, 125.766, 126.31, 126.854, 127.396, 127.934, 128.472, 129.01, 129.546, 130.079, 130.613, 131.145, 131.675, 132.203, 132.73, 133.255, 133.778, 134.299, 134.819, 135.336, 135.851, 136.363, 136.874, 137.382, 137.888, 138.392, 138.895, 139.396, 139.896, 140.394, 140.895, 141.392, 141.889, 142.385, 142.881, 143.377, 143.872, 144.367, 144.862, 145.356, 145.847, 146.34, 146.833, 147.322, 147.813, 148.301, 148.792, 149.279, 149.767, 150.255, 150.745, 151.235, 151.728, 152.223, 152.718, 153.22, 153.722, 154.229, 154.74, 155.255, 155.771, 156.296, 156.823, 157.355, 157.89, 158.435, 158.982, 159.536, 160.097, 160.665, 161.238, 161.819, 162.408, 163.002, 163.608, 164.217, 164.837, 165.464, 166.099, 166.739, 167.388, 168.038, 168.695, 169.354, 170.012, 170.673, 171.334, 171.994, 172.649, 173.298, 173.945, 174.584, 175.214, 175.837, 176.452, 177.057, 177.649, 178.227, 178.796, 179.349, 179.887, 180.409, 180.915, 181.407, 181.884, 182.343, 182.788, 183.219, 183.636, 184.036, 184.421, 184.792, 185.149, 185.492, 185.822, 186.135, 186.439, 186.726, 187, 187.265, 187.514, 187.749, 187.972, 188.182, 188.38, 188.565, 188.738, 188.899, 189.049, 189.187, 189.313, 189.432, 189.538, 189.633, 189.722, 189.798, 189.87, 189.93, 189.986, 190.035, 190.077, 190.114, 190.146, 190.173, 190.195, 190.217, 190.231, 190.246, 190.257, 190.266, 190.269, 190.276, 190.277, 190.276, 190.274, 190.273, 190.27];
  const meses = patientAge * 12;

  const data = useMemo(() => {
    return {
      labels: months,
      datasets: [
        {
          label: '97h',
          data: P97Data,
          borderColor: 'red',
        },
        {
          label: '85th',
          data: P85Data,
          borderColor: 'orange',
        },
        {
          label: '50th',
          data: P50Data,
          borderColor: 'green',
        },
        {
          label: '15th',
          data: P15Data,
          borderColor: 'orange',
        },
        {
          label: '3rd',
          data: P3Data,
          borderColor: 'red',
        },
        {
          label: 'Comprimento atual',
          data: months.map((month) => (Number(month) === meses ? Number(height) * 100 : null)),
          borderColor: 'purple', // Cor do marcador
          backgroundColor: 'purple', // Cor de fundo do marcador
          pointRadius: 8, // Tamanho do marcador
          pointHoverRadius: 12, // Tamanho ao passar o mouse
          showLine: false, // Não mostrar linha
          fill: false, // Sem preenchimento
        },
      ],
    };
  }, [P15Data, P3Data, P50Data, P85Data, P97Data, height, meses, months]);

  const config: ChartConfiguration<keyof ChartTypeRegistry, (number | null)[], string | number | boolean> = useMemo(() => {
    return {
      type: 'line',
      options: {
        layout: {
          padding: 0,
        },
        showLine: true,
        plugins: {
          // crosshair: Crosshair,
          // datalabels: false,
          // tooltip: ChartTooltipForCrosshair,
          // legend: false,
          // streaming: false,
        },
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            type: 'linear',
            grid: {
              display: true,
              lineWidth: 1,
              color: themeValues.separatorLight,
              drawBorder: false,
              drawTicks: true,
            },
            ticks: {
              padding: 8,
              stepSize: 1,
              fontColor: themeValues.alternate,
            },
            title: {
              display: true,
              text: 'Comprimento (cm)',
              color: themeValues.primary,
            },
          },
          x: {
            type: 'category',
            grid: {
              display: false,
              drawTicks: true,
              drawBorder: false,
            },
            ticks: { padding: 8, stepSize: 1, fontColor: themeValues.alternate },
            title: {
              display: true,
              text: 'Idade em meses',
              color: themeValues.primary,
            },
          },
        },
      },
      data,
    };
  }, [themeValues, data]);

  useEffect(() => {
    let myChart: Chart | null = null;

    if (chartContainer && chartContainer.current) {
      Chart.register(...registerables);

      myChart = new Chart(chartContainer.current, config);
    }
    return () => {
      if (myChart) {
        myChart.destroy();
      }
    };
  }, [config]);

  return <canvas ref={chartContainer} />;
};

export default React.memo(Height5a19anosMas);
